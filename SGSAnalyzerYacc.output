Conflict in state 55 between rule 39 and token ASSIGN resolved as shift.
Conflict in state 55 between rule 39 and token LESS resolved as shift.
Conflict in state 55 between rule 39 and token MORE resolved as shift.
Conflict in state 55 between rule 39 and token ADD resolved as shift.
Conflict in state 55 between rule 39 and token SUB resolved as shift.
Conflict in state 55 between rule 39 and token MUL resolved as shift.
Conflict in state 55 between rule 39 and token DIV resolved as shift.
Conflict in state 55 between rule 39 and token LEFT_PAREN resolved as shift.
Conflict in state 56 between rule 37 and token ASSIGN resolved as reduce.
Conflict in state 56 between rule 37 and token LESS resolved as reduce.
Conflict in state 56 between rule 37 and token MORE resolved as reduce.
Conflict in state 56 between rule 37 and token ADD resolved as shift.
Conflict in state 56 between rule 37 and token SUB resolved as shift.
Conflict in state 56 between rule 37 and token MUL resolved as shift.
Conflict in state 56 between rule 37 and token DIV resolved as shift.
Conflict in state 56 between rule 37 and token LEFT_PAREN resolved as shift.
Conflict in state 57 between rule 38 and token ASSIGN resolved as reduce.
Conflict in state 57 between rule 38 and token LESS resolved as reduce.
Conflict in state 57 between rule 38 and token MORE resolved as reduce.
Conflict in state 57 between rule 38 and token ADD resolved as shift.
Conflict in state 57 between rule 38 and token SUB resolved as shift.
Conflict in state 57 between rule 38 and token MUL resolved as shift.
Conflict in state 57 between rule 38 and token DIV resolved as shift.
Conflict in state 57 between rule 38 and token LEFT_PAREN resolved as shift.
Conflict in state 58 between rule 33 and token ASSIGN resolved as reduce.
Conflict in state 58 between rule 33 and token LESS resolved as reduce.
Conflict in state 58 between rule 33 and token MORE resolved as reduce.
Conflict in state 58 between rule 33 and token ADD resolved as reduce.
Conflict in state 58 between rule 33 and token SUB resolved as reduce.
Conflict in state 58 between rule 33 and token MUL resolved as shift.
Conflict in state 58 between rule 33 and token DIV resolved as shift.
Conflict in state 58 between rule 33 and token LEFT_PAREN resolved as shift.
Conflict in state 59 between rule 34 and token ASSIGN resolved as reduce.
Conflict in state 59 between rule 34 and token LESS resolved as reduce.
Conflict in state 59 between rule 34 and token MORE resolved as reduce.
Conflict in state 59 between rule 34 and token ADD resolved as reduce.
Conflict in state 59 between rule 34 and token SUB resolved as reduce.
Conflict in state 59 between rule 34 and token MUL resolved as shift.
Conflict in state 59 between rule 34 and token DIV resolved as shift.
Conflict in state 59 between rule 34 and token LEFT_PAREN resolved as shift.
Conflict in state 60 between rule 35 and token ASSIGN resolved as reduce.
Conflict in state 60 between rule 35 and token LESS resolved as reduce.
Conflict in state 60 between rule 35 and token MORE resolved as reduce.
Conflict in state 60 between rule 35 and token ADD resolved as reduce.
Conflict in state 60 between rule 35 and token SUB resolved as reduce.
Conflict in state 60 between rule 35 and token MUL resolved as reduce.
Conflict in state 60 between rule 35 and token DIV resolved as reduce.
Conflict in state 60 between rule 35 and token LEFT_PAREN resolved as shift.
Conflict in state 61 between rule 36 and token ASSIGN resolved as reduce.
Conflict in state 61 between rule 36 and token LESS resolved as reduce.
Conflict in state 61 between rule 36 and token MORE resolved as reduce.
Conflict in state 61 between rule 36 and token ADD resolved as reduce.
Conflict in state 61 between rule 36 and token SUB resolved as reduce.
Conflict in state 61 between rule 36 and token MUL resolved as reduce.
Conflict in state 61 between rule 36 and token DIV resolved as reduce.
Conflict in state 61 between rule 36 and token LEFT_PAREN resolved as shift.
Conflict in state 77 between rule 15 and token ELSE resolved as shift.

Grammar
rule 1    final -> statement
rule 2    final -> final statement
rule 3    statements_list -> statement
rule 4    statements_list -> statements_list statement
rule 5    parameters -> IDENTIFIER
rule 6    parameters -> parameters COMMA IDENTIFIER
rule 7    arguments -> expression
rule 8    arguments -> arguments COMMA expression
rule 9    statement -> SEMICOLON
rule 10   statement -> LEFT_BRACE RIGHT_BRACE
rule 11   statement -> expression SEMICOLON
rule 12   statement -> LEFT_BRACE statements_list RIGHT_BRACE
rule 13   statement -> VAR IDENTIFIER SEMICOLON
rule 14   statement -> VAR IDENTIFIER ASSIGN expression SEMICOLON
rule 15   statement -> IF LEFT_PAREN expression RIGHT_PAREN statement
rule 16   statement -> IF LEFT_PAREN expression RIGHT_PAREN statement ELSE statement
rule 17   statement -> FOR LEFT_PAREN expression SEMICOLON expression SEMICOLON expression RIGHT_PAREN statement
rule 18   statement -> WHILE LEFT_PAREN expression RIGHT_PAREN statement
rule 19   statement -> DO statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
rule 20   statement -> RETURN SEMICOLON
rule 21   statement -> RETURN expression SEMICOLON
rule 22   expression -> DOUBLE_LITERAL
rule 23   expression -> INTEGER_LITERAL
rule 24   expression -> STRING_LITERAL
rule 25   expression -> IDENTIFIER
rule 26   expression -> FUNCTION IDENTIFIER LEFT_PAREN parameters RIGHT_PAREN statement
rule 27   expression -> FUNCTION IDENTIFIER LEFT_PAREN RIGHT_PAREN statement
rule 28   expression -> FUNCTION LEFT_PAREN parameters RIGHT_PAREN statement
rule 29   expression -> FUNCTION LEFT_PAREN RIGHT_PAREN statement
rule 30   expression -> LEFT_PAREN expression RIGHT_PAREN
rule 31   expression -> expression LEFT_PAREN RIGHT_PAREN
rule 32   expression -> expression LEFT_PAREN arguments RIGHT_PAREN
rule 33   expression -> expression ADD expression
rule 34   expression -> expression SUB expression
rule 35   expression -> expression MUL expression
rule 36   expression -> expression DIV expression
rule 37   expression -> expression LESS expression
rule 38   expression -> expression MORE expression
rule 39   expression -> expression ASSIGN expression

Terminals, with rules where they appear

$ (-1)
error (256)
IF (257) 15 16
FOR (258) 17
WHILE (259) 18 19
DO (260) 19
FUNCTION (261) 26 27 28 29
VAR (262) 13 14
RETURN (263) 20 21
DOUBLE_LITERAL (264) 22
INTEGER_LITERAL (265) 23
STRING_LITERAL (266) 24
IDENTIFIER (267) 5 6 13 14 25 26 27
RIGHT_PAREN (268) 15 16 17 18 19 26 27 28 29 30 31 32
LEFT_BRACE (269) 10 12
RIGHT_BRACE (270) 10 12
SEMICOLON (271) 9 11 13 14 17 19 20 21
COMMA (272) 6 8
ASSIGN (273) 14 39
LESS (274) 37
MORE (275) 38
ADD (276) 33
SUB (277) 34
MUL (278) 35
DIV (279) 36
IFX (280)
ELSE (281) 16
LEFT_PAREN (282) 15 16 17 18 19 26 27 28 29 30 31 32

Nonterminals, with rules where they appear

final (29)
    on left: 1 2, on right: 2
statements_list (30)
    on left: 3 4, on right: 4 12
parameters (31)
    on left: 5 6, on right: 6 26 28
arguments (32)
    on left: 7 8, on right: 8 32
statement (33)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21,
    on right: 1 2 3 4 15 16 17 18 19 26 27 28 29
expression (34)
    on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39,
    on right: 7 8 11 14 15 16 17 18 19 21 30 31 32 33 34 35 36 37 38
    39


state 0

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    final	go to state 15
    statement	go to state 16
    expression	go to state 17



state 1

    statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN statement   (rule 15)
    statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN statement ELSE statement   (rule 16)

    LEFT_PAREN	shift, and go to state 18



state 2

    statement  ->  FOR . LEFT_PAREN expression SEMICOLON expression SEMICOLON expression RIGHT_PAREN statement   (rule 17)

    LEFT_PAREN	shift, and go to state 19



state 3

    statement  ->  WHILE . LEFT_PAREN expression RIGHT_PAREN statement   (rule 18)

    LEFT_PAREN	shift, and go to state 20



state 4

    statement  ->  DO . statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 19)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 21
    expression	go to state 17



state 5

    expression  ->  FUNCTION . IDENTIFIER LEFT_PAREN parameters RIGHT_PAREN statement   (rule 26)
    expression  ->  FUNCTION . IDENTIFIER LEFT_PAREN RIGHT_PAREN statement   (rule 27)
    expression  ->  FUNCTION . LEFT_PAREN parameters RIGHT_PAREN statement   (rule 28)
    expression  ->  FUNCTION . LEFT_PAREN RIGHT_PAREN statement   (rule 29)

    IDENTIFIER	shift, and go to state 22
    LEFT_PAREN	shift, and go to state 23



state 6

    statement  ->  VAR . IDENTIFIER SEMICOLON   (rule 13)
    statement  ->  VAR . IDENTIFIER ASSIGN expression SEMICOLON   (rule 14)

    IDENTIFIER	shift, and go to state 24



state 7

    statement  ->  RETURN . SEMICOLON   (rule 20)
    statement  ->  RETURN . expression SEMICOLON   (rule 21)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    SEMICOLON	shift, and go to state 25
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 26



state 8

    expression  ->  DOUBLE_LITERAL .   (rule 22)

    $default	reduce using rule 22 (expression)



state 9

    expression  ->  INTEGER_LITERAL .   (rule 23)

    $default	reduce using rule 23 (expression)



state 10

    expression  ->  STRING_LITERAL .   (rule 24)

    $default	reduce using rule 24 (expression)



state 11

    expression  ->  IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (expression)



state 12

    statement  ->  LEFT_BRACE . RIGHT_BRACE   (rule 10)
    statement  ->  LEFT_BRACE . statements_list RIGHT_BRACE   (rule 12)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    RIGHT_BRACE	shift, and go to state 27
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statements_list	go to state 28
    statement	go to state 29
    expression	go to state 17



state 13

    statement  ->  SEMICOLON .   (rule 9)

    $default	reduce using rule 9 (statement)



state 14

    expression  ->  LEFT_PAREN . expression RIGHT_PAREN   (rule 30)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 30



state 15

    final  ->  final . statement   (rule 2)

    $   	go to state 96
    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 31
    expression	go to state 17



state 16

    final  ->  statement .   (rule 1)

    $default	reduce using rule 1 (final)



state 17

    statement  ->  expression . SEMICOLON   (rule 11)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    SEMICOLON	shift, and go to state 32
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 18

    statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN statement   (rule 15)
    statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN statement ELSE statement   (rule 16)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 41



state 19

    statement  ->  FOR LEFT_PAREN . expression SEMICOLON expression SEMICOLON expression RIGHT_PAREN statement   (rule 17)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 42



state 20

    statement  ->  WHILE LEFT_PAREN . expression RIGHT_PAREN statement   (rule 18)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 43



state 21

    statement  ->  DO statement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 19)

    WHILE	shift, and go to state 44



state 22

    expression  ->  FUNCTION IDENTIFIER . LEFT_PAREN parameters RIGHT_PAREN statement   (rule 26)
    expression  ->  FUNCTION IDENTIFIER . LEFT_PAREN RIGHT_PAREN statement   (rule 27)

    LEFT_PAREN	shift, and go to state 45



state 23

    expression  ->  FUNCTION LEFT_PAREN . parameters RIGHT_PAREN statement   (rule 28)
    expression  ->  FUNCTION LEFT_PAREN . RIGHT_PAREN statement   (rule 29)

    IDENTIFIER	shift, and go to state 46
    RIGHT_PAREN	shift, and go to state 47

    parameters	go to state 48



state 24

    statement  ->  VAR IDENTIFIER . SEMICOLON   (rule 13)
    statement  ->  VAR IDENTIFIER . ASSIGN expression SEMICOLON   (rule 14)

    SEMICOLON	shift, and go to state 49
    ASSIGN	shift, and go to state 50



state 25

    statement  ->  RETURN SEMICOLON .   (rule 20)

    $default	reduce using rule 20 (statement)



state 26

    statement  ->  RETURN expression . SEMICOLON   (rule 21)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    SEMICOLON	shift, and go to state 51
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 27

    statement  ->  LEFT_BRACE RIGHT_BRACE .   (rule 10)

    $default	reduce using rule 10 (statement)



state 28

    statements_list  ->  statements_list . statement   (rule 4)
    statement  ->  LEFT_BRACE statements_list . RIGHT_BRACE   (rule 12)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    RIGHT_BRACE	shift, and go to state 52
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 53
    expression	go to state 17



state 29

    statements_list  ->  statement .   (rule 3)

    $default	reduce using rule 3 (statements_list)



state 30

    expression  ->  LEFT_PAREN expression . RIGHT_PAREN   (rule 30)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    RIGHT_PAREN	shift, and go to state 54
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 31

    final  ->  final statement .   (rule 2)

    $default	reduce using rule 2 (final)



state 32

    statement  ->  expression SEMICOLON .   (rule 11)

    $default	reduce using rule 11 (statement)



state 33

    expression  ->  expression ASSIGN . expression   (rule 39)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 55



state 34

    expression  ->  expression LESS . expression   (rule 37)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 56



state 35

    expression  ->  expression MORE . expression   (rule 38)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 57



state 36

    expression  ->  expression ADD . expression   (rule 33)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 58



state 37

    expression  ->  expression SUB . expression   (rule 34)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 59



state 38

    expression  ->  expression MUL . expression   (rule 35)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 60



state 39

    expression  ->  expression DIV . expression   (rule 36)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 61



state 40

    expression  ->  expression LEFT_PAREN . RIGHT_PAREN   (rule 31)
    expression  ->  expression LEFT_PAREN . arguments RIGHT_PAREN   (rule 32)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    RIGHT_PAREN	shift, and go to state 62
    LEFT_PAREN	shift, and go to state 14

    arguments	go to state 63
    expression	go to state 64



state 41

    statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN statement   (rule 15)
    statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN statement ELSE statement   (rule 16)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    RIGHT_PAREN	shift, and go to state 65
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 42

    statement  ->  FOR LEFT_PAREN expression . SEMICOLON expression SEMICOLON expression RIGHT_PAREN statement   (rule 17)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    SEMICOLON	shift, and go to state 66
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 43

    statement  ->  WHILE LEFT_PAREN expression . RIGHT_PAREN statement   (rule 18)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    RIGHT_PAREN	shift, and go to state 67
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 44

    statement  ->  DO statement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 19)

    LEFT_PAREN	shift, and go to state 68



state 45

    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN . parameters RIGHT_PAREN statement   (rule 26)
    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN . RIGHT_PAREN statement   (rule 27)

    IDENTIFIER	shift, and go to state 46
    RIGHT_PAREN	shift, and go to state 69

    parameters	go to state 70



state 46

    parameters  ->  IDENTIFIER .   (rule 5)

    $default	reduce using rule 5 (parameters)



state 47

    expression  ->  FUNCTION LEFT_PAREN RIGHT_PAREN . statement   (rule 29)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 71
    expression	go to state 17



state 48

    parameters  ->  parameters . COMMA IDENTIFIER   (rule 6)
    expression  ->  FUNCTION LEFT_PAREN parameters . RIGHT_PAREN statement   (rule 28)

    RIGHT_PAREN	shift, and go to state 72
    COMMA	shift, and go to state 73



state 49

    statement  ->  VAR IDENTIFIER SEMICOLON .   (rule 13)

    $default	reduce using rule 13 (statement)



state 50

    statement  ->  VAR IDENTIFIER ASSIGN . expression SEMICOLON   (rule 14)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 74



state 51

    statement  ->  RETURN expression SEMICOLON .   (rule 21)

    $default	reduce using rule 21 (statement)



state 52

    statement  ->  LEFT_BRACE statements_list RIGHT_BRACE .   (rule 12)

    $default	reduce using rule 12 (statement)



state 53

    statements_list  ->  statements_list statement .   (rule 4)

    $default	reduce using rule 4 (statements_list)



state 54

    expression  ->  LEFT_PAREN expression RIGHT_PAREN .   (rule 30)

    $default	reduce using rule 30 (expression)



state 55

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)
    expression  ->  expression ASSIGN expression .   (rule 39)

    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 39 (expression)



state 56

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression LESS expression .   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 37 (expression)



state 57

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression MORE expression .   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 38 (expression)



state 58

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression ADD expression .   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 33 (expression)



state 59

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression SUB expression .   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 34 (expression)



state 60

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression MUL expression .   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 35 (expression)



state 61

    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression DIV expression .   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 36 (expression)



state 62

    expression  ->  expression LEFT_PAREN RIGHT_PAREN .   (rule 31)

    $default	reduce using rule 31 (expression)



state 63

    arguments  ->  arguments . COMMA expression   (rule 8)
    expression  ->  expression LEFT_PAREN arguments . RIGHT_PAREN   (rule 32)

    RIGHT_PAREN	shift, and go to state 75
    COMMA	shift, and go to state 76



state 64

    arguments  ->  expression .   (rule 7)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 7 (arguments)



state 65

    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . statement   (rule 15)
    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . statement ELSE statement   (rule 16)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 77
    expression	go to state 17



state 66

    statement  ->  FOR LEFT_PAREN expression SEMICOLON . expression SEMICOLON expression RIGHT_PAREN statement   (rule 17)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 78



state 67

    statement  ->  WHILE LEFT_PAREN expression RIGHT_PAREN . statement   (rule 18)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 79
    expression	go to state 17



state 68

    statement  ->  DO statement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMICOLON   (rule 19)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 80



state 69

    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN RIGHT_PAREN . statement   (rule 27)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 81
    expression	go to state 17



state 70

    parameters  ->  parameters . COMMA IDENTIFIER   (rule 6)
    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN parameters . RIGHT_PAREN statement   (rule 26)

    RIGHT_PAREN	shift, and go to state 82
    COMMA	shift, and go to state 73



state 71

    expression  ->  FUNCTION LEFT_PAREN RIGHT_PAREN statement .   (rule 29)

    $default	reduce using rule 29 (expression)



state 72

    expression  ->  FUNCTION LEFT_PAREN parameters RIGHT_PAREN . statement   (rule 28)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 83
    expression	go to state 17



state 73

    parameters  ->  parameters COMMA . IDENTIFIER   (rule 6)

    IDENTIFIER	shift, and go to state 84



state 74

    statement  ->  VAR IDENTIFIER ASSIGN expression . SEMICOLON   (rule 14)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    SEMICOLON	shift, and go to state 85
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 75

    expression  ->  expression LEFT_PAREN arguments RIGHT_PAREN .   (rule 32)

    $default	reduce using rule 32 (expression)



state 76

    arguments  ->  arguments COMMA . expression   (rule 8)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 86



state 77

    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN statement .   (rule 15)
    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN statement . ELSE statement   (rule 16)

    ELSE	shift, and go to state 87

    $default	reduce using rule 15 (statement)



state 78

    statement  ->  FOR LEFT_PAREN expression SEMICOLON expression . SEMICOLON expression RIGHT_PAREN statement   (rule 17)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    SEMICOLON	shift, and go to state 88
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 79

    statement  ->  WHILE LEFT_PAREN expression RIGHT_PAREN statement .   (rule 18)

    $default	reduce using rule 18 (statement)



state 80

    statement  ->  DO statement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMICOLON   (rule 19)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    RIGHT_PAREN	shift, and go to state 89
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 81

    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN RIGHT_PAREN statement .   (rule 27)

    $default	reduce using rule 27 (expression)



state 82

    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN parameters RIGHT_PAREN . statement   (rule 26)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 90
    expression	go to state 17



state 83

    expression  ->  FUNCTION LEFT_PAREN parameters RIGHT_PAREN statement .   (rule 28)

    $default	reduce using rule 28 (expression)



state 84

    parameters  ->  parameters COMMA IDENTIFIER .   (rule 6)

    $default	reduce using rule 6 (parameters)



state 85

    statement  ->  VAR IDENTIFIER ASSIGN expression SEMICOLON .   (rule 14)

    $default	reduce using rule 14 (statement)



state 86

    arguments  ->  arguments COMMA expression .   (rule 8)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40

    $default	reduce using rule 8 (arguments)



state 87

    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN statement ELSE . statement   (rule 16)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 91
    expression	go to state 17



state 88

    statement  ->  FOR LEFT_PAREN expression SEMICOLON expression SEMICOLON . expression RIGHT_PAREN statement   (rule 17)

    FUNCTION	shift, and go to state 5
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_PAREN	shift, and go to state 14

    expression	go to state 92



state 89

    statement  ->  DO statement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMICOLON   (rule 19)

    SEMICOLON	shift, and go to state 93



state 90

    expression  ->  FUNCTION IDENTIFIER LEFT_PAREN parameters RIGHT_PAREN statement .   (rule 26)

    $default	reduce using rule 26 (expression)



state 91

    statement  ->  IF LEFT_PAREN expression RIGHT_PAREN statement ELSE statement .   (rule 16)

    $default	reduce using rule 16 (statement)



state 92

    statement  ->  FOR LEFT_PAREN expression SEMICOLON expression SEMICOLON expression . RIGHT_PAREN statement   (rule 17)
    expression  ->  expression . LEFT_PAREN RIGHT_PAREN   (rule 31)
    expression  ->  expression . LEFT_PAREN arguments RIGHT_PAREN   (rule 32)
    expression  ->  expression . ADD expression   (rule 33)
    expression  ->  expression . SUB expression   (rule 34)
    expression  ->  expression . MUL expression   (rule 35)
    expression  ->  expression . DIV expression   (rule 36)
    expression  ->  expression . LESS expression   (rule 37)
    expression  ->  expression . MORE expression   (rule 38)
    expression  ->  expression . ASSIGN expression   (rule 39)

    RIGHT_PAREN	shift, and go to state 94
    ASSIGN	shift, and go to state 33
    LESS	shift, and go to state 34
    MORE	shift, and go to state 35
    ADD 	shift, and go to state 36
    SUB 	shift, and go to state 37
    MUL 	shift, and go to state 38
    DIV 	shift, and go to state 39
    LEFT_PAREN	shift, and go to state 40



state 93

    statement  ->  DO statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON .   (rule 19)

    $default	reduce using rule 19 (statement)



state 94

    statement  ->  FOR LEFT_PAREN expression SEMICOLON expression SEMICOLON expression RIGHT_PAREN . statement   (rule 17)

    IF  	shift, and go to state 1
    FOR 	shift, and go to state 2
    WHILE	shift, and go to state 3
    DO  	shift, and go to state 4
    FUNCTION	shift, and go to state 5
    VAR 	shift, and go to state 6
    RETURN	shift, and go to state 7
    DOUBLE_LITERAL	shift, and go to state 8
    INTEGER_LITERAL	shift, and go to state 9
    STRING_LITERAL	shift, and go to state 10
    IDENTIFIER	shift, and go to state 11
    LEFT_BRACE	shift, and go to state 12
    SEMICOLON	shift, and go to state 13
    LEFT_PAREN	shift, and go to state 14

    statement	go to state 95
    expression	go to state 17



state 95

    statement  ->  FOR LEFT_PAREN expression SEMICOLON expression SEMICOLON expression RIGHT_PAREN statement .   (rule 17)

    $default	reduce using rule 17 (statement)



state 96

    $   	go to state 97



state 97

    $default	accept
